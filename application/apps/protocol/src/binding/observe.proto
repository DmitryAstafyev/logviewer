syntax = "proto2";

package observe;

message ObserveOptions {
  required ObserveOrigin origin = 1;
  required ParserType parser = 2;
}

message DltParserSettings {
  required DltFilterConfig filter_config = 1;
  repeated string fibex_file_paths = 2;
  required bool with_storage_header = 3;
  required string tz = 4;
}

message DltFilterConfig {
  required uint32 min_log_level = 1;
  repeated string app_ids = 2;
  repeated string ecu_ids = 3;
  repeated string context_ids = 4;
  required int64 app_id_count = 5;
  required int64 context_id_count = 6;
}

message SomeIpParserSettings { repeated string fibex_file_paths = 1; }

message ProcessTransportConfig {
  required string cwd = 1;
  required string command = 2;
  map<string, string> envs = 3;
}

message SerialTransportConfig {
  required string path = 1;
  required uint32 baud_rate = 2;
  required uint32 data_bits = 3;
  required uint32 flow_control = 4;
  required uint32 parity = 5;
  required uint32 stop_bits = 6;
  required uint32 send_data_delay = 7;
  required bool exclusive = 8;
}

message TCPTransportConfig { required string bind_addr = 1; }

message MulticastInfo {
  required string multiaddr = 1;
  required string interface = 2;
}

message UDPTransportConfig {
  required string bind_addr = 1;
  repeated MulticastInfo multicast = 2;
}

message FileFormat {
  enum Type {
    PcapNG = 0;
    PcapLegacy = 1;
    Text = 2;
    Binary = 3;
  }
}

message ParserType {
  oneof type {
    DltParserSettings dlt = 1;
    SomeIpParserSettings some_ip = 2;
    bool text = 3;
  }
}

message Transport {
  oneof transport {
    ProcessTransportConfig process = 1;
    TCPTransportConfig tcp = 2;
    UDPTransportConfig udp = 3;
    SerialTransportConfig serial = 4;
  }
}

message ObserveOrigin {
  oneof origin {
    File file = 1;
    Concat concat = 2;
    Stream stream = 3;
  }

  message File {
    required string name = 1;
    required FileFormat.Type format = 2;
    required string path = 3;
  }

  message Concat { repeated File files = 1; }

  message Stream {
    required string name = 1;
    required Transport transport = 2;
  }
}
